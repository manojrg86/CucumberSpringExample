<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cucumber-automation</groupId>
	<artifactId>cucumber-spring-automation</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<repositories>
		<repository>
			<id>Maven Central</id>
			<url>http://repo1.maven.org/maven/</url>
		</repository>
		<repository>
			<id>Maven Artifact</id>
			<url>http://mvnrepository.com/</url>
		</repository>
		<repository>
			<id>Maven2</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
	</repositories>

	<properties>
		<org.springframework.version>4.2.4.RELEASE</org.springframework.version>
		<allure.version>1.4.23</allure.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>ru.yandex.qatools.allure</groupId>
			<artifactId>allure-cucumber-jvm-adaptor</artifactId>
			<version>1.6.2</version>
		</dependency>
	</dependencies>
	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>ru.yandex.qatools.allure</groupId>
				<artifactId>allure-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<reportVersion>${allure.version}</reportVersion>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.automation.core.runner.Runner</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.temyers</groupId>
				<artifactId>cucumber-jvm-parallel-plugin</artifactId>
				<version>4.1.0</version>
				<executions>
					<execution>
						<id>generateRunners</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generateRunners</goal>
						</goals>
						<configuration>
							<!-- Mandatory -->
							<!-- List of package names to scan for glue code. -->
							<glue>
								<package>com.project.steps</package>
								<package>com.example.other</package>
							</glue>
							<!-- These are optional, with the default values -->
							<!-- Where to output the generated tests -->
							<outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
							<!-- The directory, which must be in the root of the runtime classpath, 
								containing your feature files. -->
							<featuresDirectory>${project.build.directory}/classes/feature</featuresDirectory>
							<!-- Directory where the cucumber report files shall be written -->
							<cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
							<!-- List of cucumber plugins. When none are provided the json formatter 
								is used. For more advanced usage see section about configuring cucumber plugins -->
							<plugins>
								<plugin>
									<name>json</name>
								</plugin>
								<!-- <plugin> <name>com.example.CustomHtmlFormatter</name> <extension>html</extension> 
									</plugin> -->
							</plugins>
							<!-- CucumberOptions.strict property -->
							<strict>true</strict>
							<!-- CucumberOptions.monochrome property -->
							<monochrome>true</monochrome>
							<!-- The tags to run, maps to CucumberOptions.tags property. Default 
								is no tags. -->
							<tags>
								<!-- <tag>@billing</tag> -->
								<!-- <tag>~@billing</tag> -->
								<tag>@important</tag>
								<!-- <tag>@important,@billing</tag> -->
							</tags>
							<!-- Generate TestNG runners instead of JUnit ones. -->
							<useTestNG>false</useTestNG>
							<!-- The naming scheme to use for the generated test classes. One 
								of 'simple' or 'feature-title' -->
							<namingScheme>simple</namingScheme>
							<!-- The class naming pattern to use. Only required/used if naming 
								scheme is 'pattern'. -->
							<namingPattern>Parallel{c}IT</namingPattern>
							<!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per 
								scenario. FEATURE generates a runner per feature. -->
							<parallelScheme>SCENARIO</parallelScheme>
							<!-- Specify a custom template for the generated sources (this is 
								a path relative to the project base directory) -->
							<!-- <customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate> -->
							<!-- Specify a custom package name for generated sources. Default 
								is no package. -->
							<packageName>com.tests</packageName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>acceptance-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<forkCount>5</forkCount>
							<reuseForks>true</reuseForks>
							<includes>
								<include>**/Parallel*IT.class</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<projectName>cucumber-jvm-example</projectName>
							<outputDirectory>${project.build.directory}/cucumber-jenkins-reports</outputDirectory>
							<cucumberOutput>${project.build.directory}/cucumber.json</cucumberOutput>
							<skippedFails>true</skippedFails>
							<enableFlashCharts>false</enableFlashCharts>
							<buildNumber>42</buildNumber>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>